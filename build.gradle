plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'

    // REST Docs
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'com.epages.restdocs-api-spec' version '0.19.2'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'kusitms'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // OAuth 2.0
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Twilio SDK
    implementation 'com.twilio.sdk:twilio:8.24.0'

    // REST Docs & Swagger 의존성 추가
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // MacOS Silicon 라이브러리 누락 문제
    runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.104.Final:osx-aarch_64'

    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

def serverUrl = "https://git.hitzone.store"

openapi3 {
    server = serverUrl
    title = "히트존 API 문서"
    description = "Spring REST Docs with Swagger UI."
    version = "0.0.1"
    outputFileNamePrefix = 'open-api-3.0.1'
    format = 'json'
    outputDirectory = 'build/resources/main/static/docs'
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'

    delete file('src/main/resources/static/docs/')
    copy {
        from "build/resources/main/static/docs"
        into "src/main/resources/static/docs/"
    }
}

// Asciidoctor 설정
tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

tasks.named("bootJar") {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
    dependsOn ':openapi3'
}

tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor
    from file(project.layout.buildDirectory.dir("docs/asciidoc").get().asFile.path)
    into file("src/main/resources/static/docs")
}

tasks.named("build") {
    dependsOn copyDocument
}
